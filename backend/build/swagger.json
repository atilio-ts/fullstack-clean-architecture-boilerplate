{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"HealthResponse": {
				"description": "Health check response containing system status and metrics",
				"properties": {
					"status": {
						"type": "string",
						"description": "Current status of the API"
					},
					"timestamp": {
						"type": "string",
						"description": "ISO timestamp of when the health check was performed"
					},
					"uptime": {
						"type": "number",
						"format": "double",
						"description": "Application uptime in seconds"
					},
					"environment": {
						"type": "string",
						"description": "Current environment (development, production, etc.)"
					},
					"version": {
						"type": "string",
						"description": "Application version"
					},
					"memory": {
						"properties": {
							"external": {
								"type": "number",
								"format": "double",
								"description": "External memory in MB"
							},
							"total": {
								"type": "number",
								"format": "double",
								"description": "Total heap memory in MB"
							},
							"used": {
								"type": "number",
								"format": "double",
								"description": "Heap memory used in MB"
							}
						},
						"required": [
							"external",
							"total",
							"used"
						],
						"type": "object",
						"description": "Memory usage statistics in MB"
					},
					"system": {
						"properties": {
							"pid": {
								"type": "number",
								"format": "double",
								"description": "Process ID"
							},
							"nodeVersion": {
								"type": "string",
								"description": "Node.js version"
							},
							"platform": {
								"type": "string",
								"description": "Operating system platform"
							}
						},
						"required": [
							"pid",
							"nodeVersion",
							"platform"
						],
						"type": "object",
						"description": "System information"
					}
				},
				"required": [
					"status",
					"timestamp",
					"uptime",
					"environment",
					"version",
					"memory",
					"system"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FileResponse": {
				"description": "Data Transfer Object for file responses\r\nUsed for API responses containing file metadata",
				"properties": {
					"id": {
						"type": "string",
						"description": "Unique identifier for the file"
					},
					"filename": {
						"type": "string",
						"description": "Original filename with extension"
					},
					"fileSize": {
						"type": "number",
						"format": "double",
						"description": "File size in bytes"
					},
					"formattedSize": {
						"type": "string",
						"description": "Human-readable file size (e.g., \"1.5 MB\", \"256 KB\")"
					},
					"contentType": {
						"type": "string",
						"description": "MIME content type of the file"
					},
					"createdAt": {
						"type": "string",
						"description": "When the file was uploaded"
					},
					"updatedAt": {
						"type": "string",
						"description": "When the file was last modified"
					}
				},
				"required": [
					"id",
					"filename",
					"fileSize",
					"formattedSize",
					"contentType",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProcessedFileRequest": {
				"description": "Data Transfer Object for processed file upload requests\r\nUsed internally after multer processes the multipart form data",
				"properties": {
					"filename": {
						"type": "string",
						"description": "Original filename with extension"
					},
					"content": {
						"type": "string",
						"description": "File content as string"
					},
					"contentType": {
						"type": "string",
						"description": "MIME content type"
					}
				},
				"required": [
					"filename",
					"content",
					"contentType"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FileListResponse": {
				"description": "Data Transfer Object for paginated file list responses\r\nUsed for API responses that return multiple files with pagination info",
				"properties": {
					"files": {
						"items": {
							"$ref": "#/components/schemas/FileResponse"
						},
						"type": "array",
						"description": "Array of file metadata objects"
					},
					"totalCount": {
						"type": "number",
						"format": "double",
						"description": "Total number of files in the system"
					},
					"totalSize": {
						"type": "number",
						"format": "double",
						"description": "Total size of all files in bytes"
					},
					"page": {
						"type": "number",
						"format": "double",
						"description": "Current page number (1-based)"
					},
					"limit": {
						"type": "number",
						"format": "double",
						"description": "Number of items per page"
					},
					"hasNextPage": {
						"type": "boolean",
						"description": "Whether there is a next page available"
					},
					"hasPreviousPage": {
						"type": "boolean",
						"description": "Whether there is a previous page available"
					}
				},
				"required": [
					"files",
					"totalCount",
					"totalSize",
					"page",
					"limit",
					"hasNextPage",
					"hasPreviousPage"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FileContentResponse": {
				"description": "Data Transfer Object for file content responses\r\nUsed when returning complete file data including content",
				"properties": {
					"id": {
						"type": "string",
						"description": "Unique identifier for the file"
					},
					"filename": {
						"type": "string",
						"description": "Original filename with extension"
					},
					"content": {
						"type": "string",
						"description": "Complete file content as string"
					},
					"fileSize": {
						"type": "number",
						"format": "double",
						"description": "File size in bytes"
					},
					"formattedSize": {
						"type": "string",
						"description": "Human-readable file size (e.g., \"1.5 MB\", \"256 KB\")"
					},
					"contentType": {
						"type": "string",
						"description": "MIME content type of the file"
					},
					"createdAt": {
						"type": "string",
						"description": "When the file was uploaded"
					},
					"updatedAt": {
						"type": "string",
						"description": "When the file was last modified"
					}
				},
				"required": [
					"id",
					"filename",
					"content",
					"fileSize",
					"formattedSize",
					"contentType",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DeleteFileResponse": {
				"description": "Data Transfer Object for file deletion responses\r\nUsed when confirming successful file deletion",
				"properties": {
					"id": {
						"type": "string",
						"description": "ID of the deleted file"
					},
					"filename": {
						"type": "string",
						"description": "Name of the deleted file"
					},
					"deleted": {
						"type": "boolean",
						"description": "Whether the deletion was successful"
					},
					"message": {
						"type": "string",
						"description": "Success or error message"
					}
				},
				"required": [
					"id",
					"filename",
					"deleted",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "Atilio API",
		"version": "1.0.0",
		"description": "Clean Architecture API with auto-generated Swagger documentation",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/health": {
			"get": {
				"operationId": "GetHealth",
				"responses": {
					"200": {
						"description": "Health check successful",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HealthResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": "OK",
											"timestamp": "2023-09-06T10:30:00.000Z",
											"uptime": 3600,
											"environment": "development",
											"version": "1.0.0",
											"memory": {
												"used": 25.5,
												"total": 50,
												"external": 5.2
											},
											"system": {
												"platform": "linux",
												"nodeVersion": "v18.17.0",
												"pid": 12345
											}
										}
									}
								}
							}
						}
					}
				},
				"description": "Get application health status",
				"summary": "Check API health and system information",
				"tags": [
					"Health"
				],
				"security": [],
				"parameters": []
			}
		},
		"/files/upload": {
			"post": {
				"operationId": "UploadFile",
				"responses": {
					"201": {
						"description": "File uploaded successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FileResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"id": "123e4567-e89b-12d3-a456-426614174000",
											"filename": "example.txt",
											"fileSize": 1024,
											"formattedSize": "1.0 KB",
											"contentType": "text/plain",
											"createdAt": "2025-09-06T10:30:00.000Z",
											"updatedAt": "2025-09-06T10:30:00.000Z"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid file format, content, or missing file"
					},
					"409": {
						"description": "File with same name already exists"
					},
					"413": {
						"description": "File too large (max 1MB)"
					}
				},
				"description": "Upload a new file to the system",
				"summary": "Upload a text document (txt, md, json only) using multipart form data",
				"tags": [
					"Files"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProcessedFileRequest"
							}
						}
					}
				}
			}
		},
		"/files": {
			"get": {
				"operationId": "GetAllFiles",
				"responses": {
					"200": {
						"description": "Files retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FileListResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"files": [
												{
													"id": "123e4567-e89b-12d3-a456-426614174000",
													"filename": "example.txt",
													"fileSize": 1024,
													"formattedSize": "1.0 KB",
													"contentType": "text/plain",
													"createdAt": "2025-09-06T10:30:00.000Z",
													"updatedAt": "2025-09-06T10:30:00.000Z"
												}
											],
											"totalCount": 1,
											"totalSize": 1024,
											"page": 1,
											"limit": 20,
											"hasNextPage": false,
											"hasPreviousPage": false
										}
									}
								}
							}
						}
					}
				},
				"description": "Get all files with optional pagination",
				"summary": "Retrieve list of all uploaded files",
				"tags": [
					"Files"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "sortBy",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"filename",
								"created_at",
								"file_size"
							]
						}
					},
					{
						"in": "query",
						"name": "sortOrder",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"ASC",
								"DESC"
							]
						}
					}
				]
			}
		},
		"/files/{fileId}": {
			"get": {
				"operationId": "GetFileContent",
				"responses": {
					"200": {
						"description": "File retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FileContentResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"id": "123e4567-e89b-12d3-a456-426614174000",
											"filename": "example.txt",
											"content": "This is the file content...",
											"fileSize": 1024,
											"formattedSize": "1.0 KB",
											"contentType": "text/plain",
											"createdAt": "2025-09-06T10:30:00.000Z",
											"updatedAt": "2025-09-06T10:30:00.000Z"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "File not found"
					}
				},
				"description": "Get file details and content by ID",
				"summary": "Retrieve complete file information including content",
				"tags": [
					"Files"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "fileId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteFile",
				"responses": {
					"200": {
						"description": "File deleted successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteFileResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"id": "123e4567-e89b-12d3-a456-426614174000",
											"filename": "example.txt",
											"deleted": true,
											"message": "File 'example.txt' has been successfully deleted"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "File not found"
					}
				},
				"description": "Delete a file by ID",
				"summary": "Remove a file from the system",
				"tags": [
					"Files"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "fileId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "http://localhost:3001/api/v1"
		}
	],
	"tags": [
		{
			"name": "Health",
			"description": "API health and system information"
		}
	]
}